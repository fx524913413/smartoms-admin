spring:
    application:
        name: center-auth
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: non_null
    redis:
        database: 1
        host: ${REDIS_HOST:192.168.1.95}
        port: ${REDIS_PORT:6379}
#        password: ${REDIS_PASSWORD:zorkdata.8888}

        pool:
        max-active: 20
    datasource:
      name: test
      url: jdbc:mysql://${MYSQL_HOST:192.168.1.157}:${MYSQL_PORT:3306}/center_admin?useUnicode=true&characterEncoding=UTF8&useSSL=false
      username: root
      password: zorkdata.8888
      # 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      filters: stat
      maxActive: 20
      initialSize: 1
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
#    rabbitmq:
#      host: ${RABBIT_MQ_HOST:localhost}
#      port:  ${RABBIT_MQ_PORT:5672}
#      username: guest
#      password: guest
#    sleuth:
#        sampler:
#            percentage: 1


mybatis:
    basepackage: com.github.wxiaoqi.security.auth.mapper
    xmlLocation: classpath:mapper/**/*.xml
    mapper-locations: "classpath*:mapper/*.xml"

server:
    port: 9777 #启动端口

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

#ribbon:
#  eureka:
#    enabled: true
#  ReadTimeout: 60000
#  ConnectTimeout: 60000
#  MaxAutoRetries: 0
#  MaxAutoRetriesNextServer: 1
#  OkToRetryOnAllOperations: false

#hystrix:
#  threadpool:
#    default:
#      coreSize: 1000 ##并发执行的最大线程数，默认10
#      maxQueueSize: 1000 ##BlockingQueue的最大队列数
#      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 10000

eureka:
    instance:
        statusPageUrlPath: /actuator/info
        healthCheckUrlPath: /actuator/health
        # docker 部署开启
        prefer-ip-address: true
        ip-address: 127.0.0.1
    client:
        serviceUrl:
#            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启
            defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/



jwt:
  token-header: Authorization
  expire: 14400
  rsa-secret: xx1WET12^%3^(WE45

client:
  id: center-auth
  secret: 123456
  token-header: client-token
  expire: 14400
  rsa-secret: x2318^^(*WRYQWR(QW&T

#redis-cache 相关
redis:
    pool:
         maxActive: 300
         maxIdle: 100
         maxWait: 1000
    host: 192.168.1.95
    port: 6379
    password:
    timeout: 2000
    sysName: center-admin
    enable: true
    database: 0
token:
    expire: 1800